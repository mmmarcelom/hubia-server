#!/bin/bash

# Script de inicializa√ß√£o do HubIA Workflow API Server
echo "üöÄ Iniciando HubIA Workflow API Server..."

# Fun√ß√£o para aguardar servi√ßo ficar dispon√≠vel
wait_for_service() {
    local url=$1
    local service_name=$2
    local max_attempts=30
    local attempt=1
    
    echo "‚è≥ Aguardando $service_name ficar dispon√≠vel..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s "$url" > /dev/null 2>&1; then
            echo "‚úÖ $service_name est√° dispon√≠vel!"
            return 0
        fi
        
        echo "üîÑ Tentativa $attempt/$max_attempts - $service_name ainda n√£o dispon√≠vel..."
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service_name n√£o ficou dispon√≠vel ap√≥s $max_attempts tentativas"
    return 1
}

# Iniciar Ollama em background
echo "üîß Iniciando Ollama..."
ollama serve &
OLLAMA_PID=$!

# Aguardar Ollama ficar dispon√≠vel
if ! wait_for_service "http://ollama:11434/api/tags" "Ollama"; then
    echo "‚ùå Falha ao iniciar Ollama"
    exit 1
fi

# Verificar se os modelos necess√°rios est√£o dispon√≠veis
echo "üìã Verificando modelos Ollama..."
MODELS=("llava:7b" "gemma2:9b" "nomic-embed-text")

for model in "${MODELS[@]}"; do
    # Verificar se o modelo existe via API
    if curl -s "http://ollama:11434/api/tags" | grep -q "\"name\":\"$model\""; then
        echo "‚úÖ Modelo $model est√° dispon√≠vel"
    else
        echo "‚ö†Ô∏è Modelo $model n√£o encontrado - baixando..."
        curl -X POST "http://ollama:11434/api/pull" -H "Content-Type: application/json" -d "{\"name\":\"$model\"}" || {
            echo "‚ùå Falha ao baixar modelo $model"
            exit 1
        }
    fi
done

# Aguardar um pouco mais para garantir que tudo est√° est√°vel
echo "‚è≥ Aguardando estabiliza√ß√£o dos servi√ßos..."
sleep 5

# Registrar o servidor na API (se necess√°rio)
echo "üîß Verificando registro do servidor na API..."
cd /app
if [ -z "$SERVER_KEY" ] || [ "$SERVER_KEY" = "sk_meu_servidor_001" ]; then
    echo "üìù Servidor n√£o registrado - registrando agora..."
    python scripts/register.py || {
        echo "‚ö†Ô∏è Falha no registro - continuando sem registro"
        echo "üí° Execute manualmente: python scripts/register.py"
    }
else
    echo "‚úÖ Servidor j√° registrado (SERVER_KEY: $SERVER_KEY)"
fi

# Iniciar o servidor Python
echo "üêç Iniciando servidor Python..."
exec python src/main.py
